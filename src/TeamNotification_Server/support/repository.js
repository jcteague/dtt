// Generated by CoffeeScript 1.3.3
(function() {
  var Q, Repository, entity_factory,
    __slice = [].slice;

  entity_factory = require('support').core.entity_factory;

  Q = require('q');

  Repository = (function() {

    function Repository(entity) {
      this.entity = entity;
    }

    Repository.prototype.get_by_id = function(id) {
      var callback, deferred;
      deferred = Q.defer();
      callback = this.get_on_resolve_callback(deferred);
      entity_factory.get(this.entity).get(id, callback);
      return deferred.promise;
    };

    Repository.prototype.find = function() {
      var callback, deferred, query_args;
      query_args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      deferred = Q.defer();
      callback = this.get_on_resolve_callback(deferred);
      entity_factory.get(this.entity).find.apply(this, query_args.concat(callback));
      return deferred.promise;
    };

    Repository.prototype.get_on_resolve_callback = function(deferred) {
      return function(entities) {
        return deferred.resolve(entities);
      };
    };

    return Repository;

  })();

  module.exports = Repository;

}).call(this);
